
## **HTTP Status Codes — Quick Notes**

HTTP status codes are **standardized response codes** sent by a server to indicate the outcome of a client’s request.
They are grouped into **5 categories** based on the first digit.

---

### **1xx — Informational Responses**

* **100 Continue** – Request received; client can continue.
* **101 Switching Protocols** – Server is switching protocols.

---

### **2xx — Successful Responses**

* **200 OK** – Request succeeded; returns requested data.
* **201 Created** – Request succeeded; a new resource was created (e.g., after `POST`).
* **202 Accepted** – Request accepted but processing is not complete.
* **204 No Content** – Request succeeded but no data is returned.

---

### **3xx — Redirection Responses**

* **301 Moved Permanently** – Resource has a new permanent URL.
* **302 Found** – Resource temporarily at another URL.
* **307 Temporary Redirect** – Same method to be used for redirected request.
* **308 Permanent Redirect** – Permanent redirection with same method.

---

### **4xx — Client Error Responses**

> Client sent a bad request; server is fine.

* **400 Bad Request** – Invalid request syntax or missing data.
* **401 Unauthorized** – Authentication required (not logged in).
* **402 Payment Required** – Reserved for payment-related errors.
* **403 Forbidden** – Logged in but lack permission to perform action.
* **404 Not Found** – Resource or route does not exist.
* **405 Method Not Allowed** – Request method not supported for resource.
* **406 Not Acceptable** – Resource cannot generate acceptable content.

---

### **5xx — Server Error Responses**

> Something went wrong on the server’s side.

* **500 Internal Server Error** – Generic server failure.
* **501 Not Implemented** – Method not implemented.
* **503 Service Unavailable** – Server is temporarily overloaded or down.
* **504 Gateway Timeout** – Server did not receive timely response from upstream.

---

### **Key Development Practices**

* Use correct codes for clarity and API standards:

  * **200** for success with data
  * **201** when creating new resources
  * **400** when request data is invalid/missing
  * **401** for unauthenticated
  * **403** for unauthorized access
  * **404** when resource not found
  * **500** when server encounters an error
* Use **`nodemon`** for automatic server restarts on file changes (`npm install -g nodemon`).

---
